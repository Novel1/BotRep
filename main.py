import logging
from telegram import Update, ReplyKeyboardMarkup, ReplyKeyboardRemove
from telegram.ext import (
    ApplicationBuilder,
    CommandHandler,
    ContextTypes,
    MessageHandler,
    filters,
    ConversationHandler,
)
import random
from datetime import datetime
import csv
import io

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format="%(asctime)s - %(name)s - %(levelname)s - %(message)s",
    level=logging.INFO
)
logger = logging.getLogger(__name__)

# –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã –¥–ª—è —Å–æ—Å—Ç–æ—è–Ω–∏–π
CHOOSING, TYPING_WISH, HOLIDAY_NAME, HOLIDAY_STYLE = range(4)

# –î–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç–≤–µ—Ç–æ–≤
RESPONSES = {
    'adventure': {
        'text': "–ü—Ä–∏–≥–æ—Ç–æ–≤—å—Å—è –∫ –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏—è–º –≤ –±–ª–∏–∂–∞–π—à–∏–µ –≤—ã—Ö–æ–¥–Ω—ã–µ!",
        'image': 'https://example.com/adventure_time.jpg'  # –ó–∞–º–µ–Ω–∏—Ç—å —Ä–µ–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–æ–π
    },
    'something_new': "–ë—É–¥—å –≥–æ—Ç–æ–≤–∞ –∏—Å–ø—ã—Ç–∞—Ç—å —á—Ç–æ-—Ç–æ –Ω–æ–≤–æ–µ!",
    'breakfast': "–û–∂–∏–¥–∞–π —Å—é—Ä–ø—Ä–∏–∑-–∑–∞–≤—Ç—Ä–∞–∫ —Å–æ–≤—Å–µ–º —Å–∫–æ—Ä–æ!",
    'handmade': "–°–¥–µ–ª–∞–µ–º —á—Ç–æ-—Ç–æ —Å–≤–æ–∏–º–∏ —Ä—É–∫–∞–º–∏ ‚Äî –≥–æ—Ç–æ–≤—å—Å—è –∫ —Ç–≤–æ—Ä—á–µ—Å—Ç–≤—É!",
    'snacks': {
        'drink': "–ñ–¥–∏, —è —É–∂–µ –≤ –ø—É—Ç–∏ —Å –Ω–∞–ø–∏—Ç–∫–æ–º!",
        'food': "–í–∫—É—Å–Ω—è—à–∫–∏ —É–∂–µ –≤ –ø—É—Ç–∏!",
        'order': "–ù–∞–ø–∏—à–∏, —á—Ç–æ –±—ã —Ç—ã —Ö–æ—Ç–µ–ª–∞ ‚Äî –±—É–¥–µ—Ç –∏—Å–ø–æ–ª–Ω–µ–Ω–æ!"
    },
    'surprise': "–ó–∞–ø—Ä–æ—Å –ø—Ä–∏–Ω—è—Ç. –û–∂–∏–¥–∞–π —á—Ç–æ-–Ω–∏–±—É–¥—å ‚Äî –æ—Ç –±—É—Å–∏–Ω–∫–∏ –¥–æ —á–µ–≥–æ-—Ç–æ –±–æ–ª—å—à–µ–≥–æ, —á–µ–º —Ç—ã –º–æ–∂–µ—à—å –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç—å",
    'hugs': "–ü–æ—Ä—Ü–∏—è –æ–±–Ω–∏–º–∞—à–µ–∫ —É–∂–µ –≤ –ø—É—Ç–∏ üíû",
    'care': "–í —Ç–µ—á–µ–Ω–∏–µ 24 —á–∞—Å–æ–≤ —Ç—ã –ø–æ—á—É–≤—Å—Ç–≤—É–µ—à—å –º–æ—é –∑–∞–±–æ—Ç—É",
    'shock': lambda: f"–®–æ–∫-–∫–æ–Ω—Ç–µ–Ω—Ç: {random.randint(1, 100)}",
    'flirt': "–ì–æ—Ç–æ–≤—å—Å—è –∫ –≤–µ—Å—ë–ª—ã–º –∏ —Ä–æ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–º –∑–∞–¥–∞–Ω–∏—è–º. –õ–µ–≥–∫–∏–π —Ñ–ª–∏—Ä—Ç –≤–∫–ª—é—á—ë–Ω!",
    'soul': "–°–µ–≥–æ–¥–Ω—è –≤–µ—á–µ—Ä–æ–º –ø–æ–≥–æ–≤–æ—Ä–∏–º –ø–æ –¥—É—à–∞–º. –ù–∞–ø–∏—à–∏ —Ç–µ–º—É, –∫–æ—Ç–æ—Ä–∞—è —Ç–µ–±—è –≤–æ–ª–Ω—É–µ—Ç"
}

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
MAIN_KEYBOARD = [
    ["üíñ –£–¥–∏–≤–∏ –º–µ–Ω—è", "üç≥ –•–æ—á—É –∑–∞–≤—Ç—Ä–∞–∫ –≤ –ø–æ—Å—Ç–µ–ª—å"],
    ["üß∞ –û—á—É–º–µ–ª—ã–µ —Ä—É—á–∫–∏", "‚ûï –í–∫—É—Å–Ω—è—à–∫–∏"],
    ["üì¶ –•–æ—á—É —Å—é—Ä–ø—Ä–∏–∑", "üß∏ –•–æ—á—É –æ–±–Ω–∏–º–∞—à–µ–∫"],
    ["üß¥ –ó–∞–±–æ—Ç–∞", "üé≤ –®–æ–∫-–∫–æ–Ω—Ç–µ–Ω—Ç"],
    ["üíÉ –§–ª–∏—Ä—Ç-—Ä–µ–∂–∏–º", "üß† –ü–æ –¥—É—à–∞–º"],
    ["üéâ –ü—Ä–∞–∑–¥–Ω–∏–∫", "‚öôÔ∏è –ê–¥–º–∏–Ω"]
]

ADMIN_KEYBOARD = [
    ["üëÅÔ∏è –õ–æ–≥–∏", "üì¨ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è"],
    ["üõéÔ∏è –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è", "üì• –≠–∫—Å–ø–æ—Ä—Ç"],
    ["üîô –ù–∞–∑–∞–¥"]
]

# –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö (–≤—Ä–µ–º–µ–Ω–Ω–∞—è)
users_wishes = {}
activity_log = []


async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user = update.message.from_user
    activity_log.append(f"{datetime.now()} - {user.id} –∑–∞–ø—É—Å—Ç–∏–ª –±–æ—Ç–∞")
    await show_main_menu(update, "–ü—Ä–∏–≤–µ—Ç, —Å–æ–ª–Ω—ã—à–∫–æ! üåü\n–í—ã–±–∏—Ä–∞–π, —á–µ–≥–æ —Ç–µ–±–µ —Ö–æ—á–µ—Ç—Å—è:")


async def show_main_menu(update: Update, text: str):
    await update.message.reply_text(
        text,
        reply_markup=ReplyKeyboardMarkup(
            MAIN_KEYBOARD,
            resize_keyboard=True,
            one_time_keyboard=False
        )
    )


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –æ—Å–Ω–æ–≤–Ω—ã—Ö –∫–æ–º–∞–Ω–¥
async def surprise_me(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_photo(
        photo=RESPONSES['adventure']['image'],
        caption=RESPONSES['adventure']['text']
    )


async def breakfast(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(RESPONSES['breakfast'])


async def handmade(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(RESPONSES['handmade'])


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–∫—É—Å–Ω—è—à–µ–∫
async def snacks_menu(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [["üçπ –ü–æ–ø–∏—Ç—å", "üçî –ü–æ–∫—É—à–∞—Ç—å"], ["üìù –ó–∞–∫–∞–∑–∞—Ç—å"], ["üîô –ù–∞–∑–∞–¥"]]
    await update.message.reply_text(
        "–í—ã–±–∏—Ä–∞–π:",
        reply_markup=ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
    )


# –î–∏–∞–ª–æ–≥ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –ø–æ–∂–µ–ª–∞–Ω–∏–π
async def custom_wish(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–ù–∞–ø–∏—à–∏ —Å–≤–æ–µ –ø–æ–∂–µ–ª–∞–Ω–∏–µ:")
    return TYPING_WISH


async def save_wish(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.message.from_user.id
    users_wishes[user_id] = update.message.text
    await update.message.reply_text("–ó–∞–ø–∏—Å–∞–ª–∞! –°–∫–æ—Ä–æ —ç—Ç–æ –ø–æ—è–≤–∏—Ç—Å—è –≤ —Ç–≤–æ–µ–π –∂–∏–∑–Ω–∏ ‚ú®")
    return await show_main_menu(update, "–ß—Ç–æ-–Ω–∏–±—É–¥—å –µ—â–µ?")


# –®–æ–∫-–∫–æ–Ω—Ç–µ–Ω—Ç
async def shock_content(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(RESPONSES['shock']())


# –ê–¥–º–∏–Ω—Å–∫–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏
async def admin_panel(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if update.message.from_user.id == ADMIN_ID:  # –ó–∞–º–µ–Ω–∏—Ç—å –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π ID
        await update.message.reply_text(
            "–ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å:",
            reply_markup=ReplyKeyboardMarkup(ADMIN_KEYBOARD, resize_keyboard=True)
        )
        return CHOOSING
    return ConversationHandler.END


async def export_wishes(update: Update, context: ContextTypes.DEFAULT_TYPE):
    csv_data = io.StringIO()
    writer = csv.writer(csv_data)
    writer.writerow(["User ID", "Wish"])
    for user_id, wish in users_wishes.items():
        writer.writerow([user_id, wish])

    csv_data.seek(0)
    await update.message.reply_document(
        document=io.BytesIO(csv_data.getvalue().encode()),
        filename="wishes.csv"
    )


# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
def setup_handlers(application):
    conv_handler = ConversationHandler(
        entry_points=[
            MessageHandler(filters.Regex(r"^‚öôÔ∏è –ê–¥–º–∏–Ω$"), admin_panel),
            MessageHandler(filters.Regex(r"^üìù –ó–∞–∫–∞–∑–∞—Ç—å$"), custom_wish)
        ],
        states={
            TYPING_WISH: [MessageHandler(filters.TEXT & ~filters.COMMAND, save_wish)],
            CHOOSING: [
                MessageHandler(filters.Regex(r"^üì• –≠–∫—Å–ø–æ—Ä—Ç$"), export_wishes),
                MessageHandler(filters.Regex(r"^üîô –ù–∞–∑–∞–¥$"), show_main_menu)
            ]
        },
        fallbacks=[CommandHandler('start', start)]
    )

    application.add_handler(conv_handler)
    application.add_handler(MessageHandler(filters.Regex(r"^‚ûï –í–∫—É—Å–Ω—è—à–∫–∏$"), snacks_menu))
    application.add_handler(MessageHandler(filters.Regex(r"^üé≤ –®–æ–∫-–∫–æ–Ω—Ç–µ–Ω—Ç$"), shock_content))
    # –î–æ–±–∞–≤–∏—Ç—å –æ—Å—Ç–∞–ª—å–Ω—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏


def main():
    application = ApplicationBuilder().token("YOUR_TOKEN").build()
    setup_handlers(application)
    application.run_polling()


if __name__ == "__main__":
    main()